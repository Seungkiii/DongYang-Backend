name: Deploy to EC2

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle (skip tests)
      run: ./gradlew build -x test

    - name: Setup SSH key
      if: github.ref == 'refs/heads/main'
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/docker-key
        chmod 600 ~/.ssh/docker-key
        ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # 디렉토리 생성
          mkdir -p ${{ secrets.DEPLOY_PATH }}
          cd ${{ secrets.DEPLOY_PATH }}
          
          # 기존 프로젝트 삭제 (있다면)
          rm -rf DongYang-Backend
          
          # 프로젝트 클론
          git clone https://github.com/Seungkiii/DongYang-Backend.git
          cd DongYang-Backend
          
          # 상위 디렉토리로 이동하여 docker-compose 실행
          cd ..
          
          # Docker Compose 파일이 없다면 생성
          if [ ! -f docker-compose.yml ]; then
            cat > docker-compose.yml << 'COMPOSEEOF'
          version: '3.8'

          services:
            # Backend Service
            backend:
              build:
                context: ./DongYang-Backend
                dockerfile: Dockerfile
              container_name: dongyang-backend
              restart: unless-stopped
              ports:
                - "8080:8080"
              networks:
                - dongyang-network

          networks:
            dongyang-network:
              driver: bridge
          COMPOSEEOF
          fi
          
          # Backend 서비스 재시작
          docker-compose down backend || true
          docker-compose build backend
          docker-compose up -d backend
          
          # 로그 확인
          echo "=== Backend Service 로그 ==="
          docker-compose logs --tail=10 backend 
          